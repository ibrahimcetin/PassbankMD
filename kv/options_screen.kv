#:import m_res kivymd.material_resources


<CustomOneLineIconListItem>
    IconLeftWidget:
        icon: root.icon

<OptionsScreen>
    MDToolbar:
        title: "Options"
        elevation: 10
        pos_hint: {"top": 1}
        left_action_items: [["arrow-left", lambda button: root.goBackBtn()]]

    ScrollView:
        y: -app.theme_cls.standard_increment
        do_scroll_y: False

        MDList:
            id: container


<SortSelectionItem>
    id: selection_item
    on_press: check.trigger_action(duration=0)

    CheckboxLeftWidget:
        id: check
        group: "check"
        on_press: root.screen.setSortByOption(selection_item.text)

<SubtitlesSelectionItem>
    on_release: check.trigger_action(duration=0)

    LeftCheckbox:
        id: check

<AppearanceOptionsScreen>:
    MDToolbar:
        title: "Appearance"
        elevation: 10
        pos_hint: {"top": 1}
        left_action_items: [["arrow-left", lambda button: root.goBackBtn()]]

    ScrollView:
        y: -app.theme_cls.standard_increment
        do_scroll_y: False

        MDGridLayout:
            cols: 1
            adaptive_height: True
            padding: [dp(20), dp(25)]

            MDLabel:
                text: "APPEARANCE"
                font_style: "Button"
                color: 1,0,0,1

            MDList:
                TwoLineListItem:
                    id: sort_by_item
                    text: "Sort By"
                    on_press: root.sortByButton()

                TwoLineListItem:
                    id: list_subtitles_item
                    text: "List Subtitles"
                    on_press: root.listSubtitlesButton()

            Widget:
                size_hint_y: None
                height: dp(25)

            MDLabel:
                text: "ANIMATIONS"
                font_style: "Button"
                color: 1,0,0,1

            MDList:
                OneLineListItemWithContainer:
                    text: "Transition Animation"
                    on_press: transition_animation_switch.trigger_action(duration=0)

                    RightSwitch:
                        id: transition_animation_switch
                        on_active: root.animationFunctions()

                OneLineListItemWithContainer:
                    text: "Bottom Sheet Animation"
                    on_press: bottomsheet_animation_switch.trigger_action(duration=0)

                    RightSwitch:
                        id: bottomsheet_animation_switch
                        on_active: root.animationFunctions()


<TwoLineListItemWithContainer>:
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<DatabaseOptionsScreen>:
    MDToolbar:
        title: "Database"
        elevation: 10
        pos_hint: {"top": 1}
        left_action_items: [["arrow-left", lambda button: root.goBackBtn()]]

    ScrollView:
        y: -app.theme_cls.standard_increment
        do_scroll_x: False
        do_scroll_y: False

        MDGridLayout:
            cols: 1
            adaptive_height: True
            padding: [dp(20), dp(25)]

            MDLabel:
                text: "DATABASE"
                font_style: "Button"
                color: 1,0,0,1

            MDList:
                id: database_container

            Widget:
                size_hint_y: None
                height: dp(25)

            MDLabel:
                text: "AUTO BACKUP"
                font_style: "Button"
                color: 1,0,0,1

            MDList:
                TwoLineListItemWithContainer:
                    text: "Auto Backup"
                    secondary_text: "Create auto backups on your storage"
                    on_press: switch.trigger_action(duration=0)

                    RightSwitch:
                        id: switch
                        on_active: root.checkPlatform(self)

                TwoLineListItem:
                    id: location_list_item
                    text: "Location"
                    disabled: not switch.active
                    on_press: root.autoBackupLocationFunction()


<OneLineListItemWithContainer>:
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<SecurityOptionsScreen>:
    MDToolbar:
        title: "Security"
        elevation: 10
        pos_hint: {"top": 1}
        left_action_items: [["arrow-left", lambda button: root.goBackBtn()]]

    ScrollView:
        y: -app.theme_cls.standard_increment
        do_scroll_y: False

        MDGridLayout:
            cols: 1
            adaptive_height: True
            padding: [dp(20), dp(25)]

            MDLabel:
                text: "SECURITY"
                font_style: "Button"
                color: 1,0,0,1

            MDList:
                OneLineListItem:
                    text: "Change Master Password"
                    on_press: root.changeMasterPasswordButton()

                OneLineListItemWithContainer:
                    text: "Fast Login"
                    on_press: fast_login_switch.trigger_action(duration=0)

                    RightSwitch:
                        id: fast_login_switch
                        on_active: root.fastLoginFunction(self.active)

                OneLineListItemWithContainer:
                    text: "Auto Exit"
                    on_press: auto_exit_switch.trigger_action(duration=0)

                    RightSwitch:
                        id: auto_exit_switch
                        on_active: root.autoExitFunction(self.active)

<ChangeMasterPasswordScreen>:
    MDToolbar:
        title: "Change Master Password"
        elevation: 10
        pos_hint: {"top": 1}
        left_action_items: [["arrow-left", lambda button: root.goBackBtn()]]

    MDBoxLayout:
        padding: dp(10)
        spacing: dp(10)
        orientation: "vertical"
        pos_hint: {"center_x": .5, "center_y": .5}
        adaptive_height: True
        size_hint_x: .7

        MDLabel:
            text: "Change Master Password"
            halign: "center"
            font_style: "Button"

        MDBoxLayout:
            adaptive_height: True

            MDTextField:
                id: current_password_field
                hint_text: "Current Password"
                password: True
                write_tab: False

                on_text: root.checkField(self, self.text)
                helper_text: "Password not correct"
                helper_text_mode: "on_error"

            MDIconButton:
                id: show_password_button
                icon: "eye-outline"
                on_press: root.showPasswordBtn()

        MDTextField:
            id: new_password_field
            hint_text: "New Password"
            password: True
            write_tab: False

            on_text: root.checkField(self, self.text)
            helper_text: "Passwords not match"
            helper_text_mode: "on_error"

        MDTextField:
            id: confirm_new_password_field
            hint_text: "Confirm New Password"
            password: True
            write_tab: False

            helper_text: "Passwords not match"
            helper_text_mode: "on_error"
            on_text: root.checkConfirmField(self, self.text)

        MDRaisedButton:
            text: "Update"
            pos_hint: {"center_x": .5}
            on_press: root.updateButton(current_password_field.text, new_password_field.text, confirm_new_password_field.text)


<PasswordSuggestionOptionsScreen>:
    MDToolbar:
        title: "Password Suggestion"
        elevation: 10
        pos_hint: {"top": 1}
        left_action_items: [["arrow-left", lambda button: root.goBackBtn()]]

    ScrollView:
        y: -app.theme_cls.standard_increment
        do_scroll_x: False
        do_scroll_y: False

        MDGridLayout:
            cols: 1
            adaptive_height: True
            padding: [dp(20), dp(25)]

            MDLabel:
                text: "PASSWORD SUGGESTION"
                font_style: "Button"
                color: 1,0,0,1

            Widget:
                size_hint_y: None
                height: dp(30)

            MDLabel:
                text: "Password Length"
                padding_x: dp(16)

            MDBoxLayout:
                adaptive_height: True
                height: self.minimum_height
                padding: [dp(35), dp(15), dp(20), dp(0)]

                MDLabel:
                    id: slider_label
                    size_hint_x: None
                    width: dp(20)
                    text: str(int(slider.value))

                MDSlider:
                    id: slider
                    min: 8
                    max: 99
                    value: 15
                    hint: False
                    show_off: False
                    on_touch_up: root.sliderFunction(self)

                MDIconButton:
                    icon: "minus"
                    size: dp(40), dp(40)
                    on_press: slider.value -= 1

                MDIconButton:
                    icon: "plus"
                    size: dp(40), dp(40)
                    on_press: slider.value += 1

            MDList:
                MDSeparator:

                OneLineListItemWithContainer:
                    text: "Lowercase Characters (a-z)"
                    on_press: lowercase_checkbox.trigger_action(duration=0)

                    RightCheckbox:
                        id: lowercase_checkbox
                        on_press: root.checkboxFunction(self)

                OneLineListItemWithContainer:
                    text: "Uppercase Characters (A-Z)"
                    on_press: uppercase_checkbox.trigger_action(duration=0)

                    RightCheckbox:
                        id: uppercase_checkbox
                        on_press: root.checkboxFunction(self)

                OneLineListItemWithContainer:
                    text: "Digits (0-9)"
                    on_press: digits_checkbox.trigger_action(duration=0)

                    RightCheckbox:
                        id: digits_checkbox
                        on_press: root.checkboxFunction(self)

                OneLineListItemWithContainer:
                    text: "Symbols (!#$%&\'()* etc.)"
                    on_press: symbols_checkbox.trigger_action(duration=0)

                    RightCheckbox:
                        id: symbols_checkbox
                        on_press: root.checkboxFunction(self)

            Widget:
                size_hint_y: None
                height: dp(30)

            MDRelativeLayout:
                MDRaisedButton:
                    text: "Suggest Password"
                    pos_hint: {"center_x": .5, "center_y": .5}
                    on_press: root.suggestPasswordButton()
